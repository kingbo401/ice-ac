<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.kingbo401.acl.dao.UserRoleRefDAO"> 
	<insert id="batchCreate" parameterType="list">
		insert into user_role_ref(user_id,role_id,tenant,status,effective_time,expire_time,create_time,update_time) values
		<foreach collection="list" item="item" index="index" separator="," >  
		(#{item.userId},#{item.roleId},#{item.tenant},#{item.status},#{item.effectiveTime},#{item.expireTime},#{item.createTime},#{item.updateTime})
		</foreach>
		ON DUPLICATE KEY UPDATE update_time = now(),status = values(status),effective_time=values(effective_time),expire_time=values(expire_time)
	</insert>

	<update id="updateRefsStatus">
		update user_role_ref set status = #{status},update_time = now() where user_id=#{userId}
		<if test = "tenant != null and tenant != ''">
			and tenant=#{tenant}
		</if>
		<if test="roleIds != null and roleIds.size > 0">
			and role_id in
			<foreach collection="roleIds" item="roleId" open="(" separator="," close=")">
				#{roleId}
			</foreach>
		</if>
	</update>
	
	<update id="removeRefsByRoleId">
		update user_role_ref set status = 0,update_time = now() where role_id = #{roleId}
	</update>

	<sql id="queryUserRoleRefSubSql">
		where t1.user_id=#{userId} and t1.tenant=#{tenant} and t1.role_id=t2.id 
		<if test="status != null">
            and t1.status = #{status},
        </if>
		<if test = "appKey != null and appKey != ''">
		    and t2.app_key=#{appKey}
		</if>
		<if test='tenant == "_t_common"'>
		    and t2.tenant='_t_common'
		</if>
		<if test='tenant != "_t_common"'>
		    and t2.tenant in ('_t_common',#{tenant})
		</if>
		<if test = "roleName != null and roleName != ''">
		    and t2.name like  concat('%', #{roleName}, '%')
		</if>
		<if test = "roleType != null and roleType != ''">
		    and t2.type = #{roleType}
		</if>
		<if test = "roleKey != null and roleKey != ''">
		    and t2.role_key = #{roleKey}
		</if>
		<if test = "roleId != null">
		    and t2.id=#{roleId}
		</if>
		<if test="returnNotEffective == false">
			and	(t1.expire_time &gt;= now() or t1.expire_time is null) 
			and (t1.effective_time &lt;= now() or t1.effective_time is null)
		</if>
		and t2.status=1 and t1.status!=0
	</sql>
	
	<select id = "listUserRoleRef"  resultType="com.kingbo401.acl.model.dto.UserRoleRefDTO">
		select t1.*,t2.app_key,t2.tenant as role_tenant,t2.role_key,
		t2.name,t2.name,t2.description
		from user_role_ref t1,  role t2
		<include refid="queryUserRoleRefSubSql" />
		<if test = "orderField != null and orderField != ''">
		    order by ${orderField} ${orderType}
		</if>
	</select>
	
	<select id = "countUserRoleRef"  resultType="long">
		select count(*) from user_role_ref t1,  role t2
		<include refid="queryUserRoleRefSubSql" />
	</select>
	
	<select id = "pageUserRoleRef"  resultType="com.kingbo401.acl.model.dto.UserRoleRefDTO">
		select t1.*,t2.app_key,t2.tenant as role_tenant,t2.role_key,
		t2.name as roleName,t2.en_name as roleEnName,t2.description as roleDescription
		from user_role_ref t1, role t2
		<include refid="queryUserRoleRefSubSql" />
		<if test = "orderField != null and orderField != ''">
		    order by ${orderField} ${orderType}
		</if>
		limit #{offset},#{pageSize}
	</select>
	
	<select id = "hasUserUse" resultType="UserRoleRefDO">
		select * from user_role_ref 
		where role_id=#{roleId} and status!=0
		and	(expire_time &gt;= now() or expire_time is null)
		limit 1
	</select>
	
	<select id = "checkUserRole" resultType="int">
		select count(*) from user_role_ref 
		where user_id=#{userId} and tenant=#{tenant} and role_id=#{roleId} and status!=0
		and	(expire_time &gt;= now() or expire_time is null) 
	</select>
	
	<select id = "listUsersRoleRef"  resultType="com.kingbo401.acl.model.dto.UserRoleRefDTO">
		select t1.*,t2.app_key,t2.tenant as role_tenant,t2.role_key,
		t2.name as roleName,t2.en_name as roleEnName,t2.description as roleDescription
		from user_role_ref t1,  role t2
		where t1.user_id in
		<foreach collection="userIds" open="(" close=")" separator="," item="userId">
			#{userId}
		</foreach>
		and t1.tenant=#{tenant} and t1.role_id=t2.id 
		<if test="status != null">
            and t1.status = #{status},
        </if>
		<if test = "appKey != null and appKey != ''">
		    and t2.app_key=#{appKey}
		</if>
		<if test='tenant == "_t_common"'>
		    and t2.tenant='_t_common'
		</if>
		<if test='tenant != "_t_common"'>
		    and t2.tenant in ('_t_common',#{tenant})
		</if>
		<if test="filterUserRole == true">
			<if test = "roleName != null and roleName != ''">
			    and t2.name like  concat('%', #{roleName}, '%')
			</if>
			<if test = "roleType != null and roleType != ''">
			    and t2.type = #{roleType}
			</if>
			<if test = "roleKey != null and roleKey != ''">
			    and t2.role_key = #{roleKey}
			</if>
			<if test = "roleId != null">
			    and t2.id=#{roleId}
			</if>
		</if>
		<if test="returnNotEffective == false">
			and	(t1.expire_time &gt;= now() or t1.expire_time is null) 
			and (t1.effective_time &lt;= now() or t1.effective_time is null)
		</if>
		and t2.status=1 and t1.status!=0
		<if test = "orderField != null and orderField != ''">
		    order by ${orderField} ${orderType}
		</if>
	</select>
	
	
	<sql id="queryUserSubSql">
		where t1.user_id=#{userId} and t1.tenant=#{tenant} and t1.role_id=t2.id 
		<if test="status != null">
            and t1.status = #{status},
        </if>
		<if test = "appKey != null and appKey != ''">
		    and t2.app_key=#{appKey}
		</if>
		<if test='tenant == "_t_common"'>
		    and t2.tenant='_t_common'
		</if>
		<if test='tenant != "_t_common"'>
		    and t2.tenant in ('_t_common',#{tenant})
		</if>
		<if test = "roleName != null and roleName != ''">
		    and t2.name like  concat('%', #{roleName}, '%')
		</if>
		<if test = "roleType != null and roleType != ''">
		    and t2.type = #{roleType}
		</if>
		<if test = "roleKey != null and roleKey != ''">
		    and t2.role_key = #{roleKey}
		</if>
		<if test = "roleId != null">
		    and t2.id=#{roleId}
		</if>
		<if test="returnNotEffective == false">
			and	(t1.expire_time &gt;= now() or t1.expire_time is null) 
			and (t1.effective_time &lt;= now() or t1.effective_time is null)
		</if>
		and t2.status=1 and t1.status!=0
	</sql>
	
	
	<select id = "countUser"  resultType="long">
		select count(distinct(t1.user_id)) from user_role_ref t1,  role t2
		<include refid="queryUserSubSql" />
	</select>
	
	<select id = "pageUser"  resultType="Lonh">
		select distinct(t1.user_id)
		from user_role_ref t1, role t2
		<include refid="queryUserSubSql" />
		<if test = "orderField != null and orderField != ''">
		    order by ${orderField} ${orderType}
		</if>
		limit #{offset},#{pageSize}
	</select>
	
	<select id="listUserTenant" resultType="string">
		select distinct(t1.tenant)
		from user_role_ref t1, role t2
		where t1.role_id=t2.id and t2.app_key=#{appKey} and t1.user_id=#{userId} and and t2.status=1 and t1.status=1
		<if test="roleKeys != null and roleKeys.size > 0">
		and t2.role_key in
		<foreach collection="roleKeys" open="(" close=")" separator="," item="roleKey">
			 #{roleKey}
		 </foreach>
		 </if>
        and	(t1.expire_time &gt;= now() or t1.expire_time is null) and (t1.effective_time &lt;= now() or t1.effective_time is null)
	</select>
</mapper> 